import serial

import time

import string

import pynmea2

import sys




from pubnub.pnconfiguration import PNConfiguration

from pubnub.pubnub import PubNub

from pubnub.exceptions import PubNubException

from pubnub.callbacks import SubscribeCallback

from pubnub.enums import PNOperationType, PNStatusCategory

# import 문구


# 웹 html과 연결시키기 위한 공동 raspi-tracker 문자열을 pnChannel에 넣음으로써 서로 인식하게 한다
pnChannel = "raspi-tracker"

 
# Pubnub에서 sub키와 publish키를 부여받아 저장, html에도 같은 키를 넣는다
pnconfig = PNConfiguration()

pnconfig.subscribe_key = "sub-c-38f9a86a-ce68-11eb-a572-a6433017f026"

pnconfig.publish_key = "pub-c-c3109ea1-29a9-494c-847b-0e4feafc5589"

pnconfig.ssl = False

 

pubnub = PubNub(pnconfig)

pubnub.subscribe().channels(pnChannel).execute()

 
# GPS port 설정
while True:

    port="/dev/ttyAMA0"

    ser=serial.Serial(port, baudrate=9600, timeout=0.5)

    dataout = pynmea2.NMEAStreamReader()

    newdata=ser.readline()

    if sys.version_info[0] == 3:

        newdata = newdata.decode("utf-8","ignore")

        
#  GPRMC로 위도와 경도를 수신받는다
        if newdata[0:6] == "$GPRMC":

                print(newdata)

                newmsg=pynmea2.parse(newdata)
# newmsg의 latitude, longitude값을 lat, lng에 넣는다
                lat=newmsg.latitude

                lng=newmsg.longitude

                try:
# Pubnub에서 받은 publish와 pnChannel -> raspi-tracker을 수신된 위도 경도인 lat, lng와 함께 보낸다
                    envelope = pubnub.publish().channel(pnChannel).message({'lat':lat, 'lng':lng}).sync()
# 실시간으로 수신되고 있다는 것을 알 수 있다
                    print("publish timetoken: %s" % envelope.result)

                except PubNubException as e:

                    print("error")